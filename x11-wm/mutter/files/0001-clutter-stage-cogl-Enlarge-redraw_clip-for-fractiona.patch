From cb0f73fbf6f300a6f76f0a64691ed91531e97242 Mon Sep 17 00:00:00 2001
From: Daniel van Vugt <daniel.van.vugt@canonical.com>
Date: Fri, 6 Nov 2020 17:42:00 +0800
Subject: [PATCH] clutter-stage-cogl: Enlarge redraw_clip for fractional
 scaling damage

redraw_clip and scaled_cumulative_damage represent the same area but on
different scales. With fractional scaling they might not line up in a
way that's losslessly reversible, so we would see 1px gaps in places where
redraw_clip had been calculated 1px smaller than scaled_cumulative_damage.

To avoid such gaps ever appearing, we now ensure redraw_clip covers
AT LEAST as much area as scaled_cumulative_damage. This will prevent any
1px gaps appearing if redraw_clip was slightly smaller than
scaled_cumulative_damage along any of the edges.

Fixes: https://gitlab.gnome.org/GNOME/mutter/-/issues/1500

https://gitlab.gnome.org/GNOME/mutter/-/merge_requests/1539
---
 clutter/clutter/cogl/clutter-stage-cogl.c | 19 +++++++++++++++++--
 1 file changed, 17 insertions(+), 2 deletions(-)

diff --git a/clutter/clutter/cogl/clutter-stage-cogl.c b/clutter/clutter/cogl/clutter-stage-cogl.c
index 8374a9100..a367746b4 100644
--- a/clutter/clutter/cogl/clutter-stage-cogl.c
+++ b/clutter/clutter/cogl/clutter-stage-cogl.c
@@ -523,8 +523,23 @@ clutter_stage_cogl_redraw_view_primary (ClutterStageCogl *stage_cogl,
 
           scaled_cumulative_damage =
             scale_and_clamp_region (cumulative_damage, fb_scale);
-          cairo_region_translate (cumulative_damage, view_rect.x, view_rect.y);
-          cairo_region_union (redraw_clip, cumulative_damage);
+
+          if (fmodf (fb_scale, 1.f) > 0.f)  /* fractional scaling */
+            {
+              cairo_region_destroy (redraw_clip);
+              redraw_clip =
+                scale_and_clamp_region (scaled_cumulative_damage, 1 / fb_scale);
+              cairo_region_translate (redraw_clip, view_rect.x, view_rect.y);
+              cairo_region_intersect_rectangle (redraw_clip, &view_rect);
+            }
+          else
+            {
+              cairo_region_translate (cumulative_damage,
+                                      view_rect.x,
+                                      view_rect.y);
+              cairo_region_union (redraw_clip, cumulative_damage);
+            }
+
           cairo_region_destroy (cumulative_damage);
 
           CLUTTER_NOTE (CLIPPING, "Reusing back buffer(age=%d) - repairing region: num rects: %d\n",
-- 
GitLab

